{"version":3,"sources":["component/AppFooter.js","component/LinuxApp.js","component/MiniDrawer.js","App.js","serviceWorker.js","index.js"],"names":["AppFooter","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","React","Component","LinuxApp","_Component","item","url","iconDesktopUrl","toString","startsWith","concat","iconMobileUrl","flatpakAppId","data","props","Card_default","className","CardActionArea_default","href","getUrl","target","rel","Typography_default","color","gutterBottom","name","CardContent_default","src","getDesktopImage","alt","categories","id","MiniDrawer","state","open","handleDrawerOpen","_this","setState","handleDrawerClose","_classNames3","_classNames4","_this$props","classes","theme","root","CssBaseline_default","AppBar_default","position","classNames","appBar","defineProperty","appBarShift","Toolbar_default","disableGutters","IconButton_default","aria-label","onClick","menuButton","hide","Menu_default","variant","noWrap","Drawer_default","drawer","drawerOpen","drawerClose","paper","toolbar","direction","ChevronRight_default","ChevronLeft_default","Divider_default","List_default","map","ListItem_default","button","style","width","marginRight","ListItemText_default","primary","content","LinuxApp_LinuxApp","withStyles","display","zIndex","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","enteringScreen","flexShrink","whiteSpace","drawerIcon","overflowX","spacing","unit","breakpoints","up","objectSpread","alignItems","justifyContent","padding","mixins","flexGrow","withTheme","App","Fragment","index_es","component_MiniDrawer","AppFooter_AppFooter","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3858312a.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../css/AppFooter.scss';\r\n\r\nexport class AppFooter extends React.Component {\r\n    render() {\r\n        return (\r\n            <footer><small>&copy; Copyright 2019, StellaSoft</small></footer>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport '../css/LinuxApp.scss';\r\n\r\nconst FLATHUB_BASE_URL = 'https://flathub.org'\r\n\r\nexport class LinuxApp extends Component {\r\n\r\n    getDesktopImage(item) {\r\n        let url = item.iconDesktopUrl.toString();\r\n\r\n        if (!url.startsWith(\"https\")) {\r\n            url = `${FLATHUB_BASE_URL}${item.iconDesktopUrl}`;\r\n        }\r\n\r\n        return url;\r\n    }\r\n\r\n    getMobileImage(item) {\r\n        return `${FLATHUB_BASE_URL}${item.iconMobileUrl}`\r\n    }\r\n\r\n    getUrl(item) {\r\n        return `${FLATHUB_BASE_URL}/apps/details/${item.flatpakAppId}`\r\n    }\r\n\r\n    render() {\r\n        const { data } = this.props\r\n        return (\r\n            <Card className=\"card\">\r\n                <CardActionArea>\r\n                    <a className=\"link\" href={this.getUrl(data)} target=\"_blank\" rel={\"noopener noreferrer\"}>\r\n                        <Typography className=\"center title\" color=\"textSecondary\" gutterBottom>\r\n                            {data.name}\r\n                        </Typography>\r\n\r\n                        <CardContent>\r\n                            <img className=\"icon center\" src={this.getDesktopImage(data)} alt={data.name} />\r\n                        </CardContent>\r\n                    </a>\r\n                </CardActionArea>\r\n            </Card>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport data from '../data/flatpaks.json'\r\nimport { LinuxApp } from './LinuxApp.js'\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst categories = [\r\n  { id: 1, src: './images/appimage.png', name: 'AppImage' },\r\n  { id: 2, src: './images/flatpak.png', name: 'Flatpak' },\r\n  { id: 3, src: './images/snap.png', name: 'Snap' }\r\n]\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginLeft: 12,\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerIcon: {\r\n    width: 24\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing.unit * 7 + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing.unit * 9 + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing.unit * 3,\r\n  },\r\n});\r\n\r\nclass MiniDrawer extends React.Component {\r\n  state = {\r\n    open: false,\r\n  };\r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    const { classes, theme } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar\r\n          position=\"fixed\"\r\n          className={classNames(classes.appBar, {\r\n            [classes.appBarShift]: this.state.open,\r\n          })}\r\n        >\r\n          <Toolbar disableGutters={!this.state.open}>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"Open drawer\"\r\n              onClick={this.handleDrawerOpen}\r\n              className={classNames(classes.menuButton, {\r\n                [classes.hide]: this.state.open,\r\n              })}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n              App Store\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          className={classNames(classes.drawer, {\r\n            [classes.drawerOpen]: this.state.open,\r\n            [classes.drawerClose]: !this.state.open,\r\n          })}\r\n          classes={{\r\n            paper: classNames({\r\n              [classes.drawerOpen]: this.state.open,\r\n              [classes.drawerClose]: !this.state.open,\r\n            }),\r\n          }}\r\n          open={this.state.open}\r\n        >\r\n          <div className={classes.toolbar}>\r\n            <IconButton onClick={this.handleDrawerClose}>\r\n              {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List>\r\n            {categories.map((item) =>\r\n              <ListItem button key={item.name}>\r\n                <img className=\"icon\" src={item.src} alt={item.name} style={{ width: 24, marginRight: 15 }} />\r\n                <ListItemText primary={item.name}></ListItemText>\r\n              </ListItem>\r\n            )}\r\n          </List>\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n          <div className=\"app-grid\">\r\n            {data.map((item) => {\r\n              return <LinuxApp data={item} />\r\n            })}\r\n          </div>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMiniDrawer.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(MiniDrawer);","import React, { Component } from 'react'\r\nimport './App.scss'\r\nimport { AppFooter } from './component/AppFooter';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport MiniDrawer from './component/MiniDrawer';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <MiniDrawer />\r\n        <AppFooter />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}