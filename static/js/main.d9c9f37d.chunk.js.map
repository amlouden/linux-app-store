{"version":3,"sources":["component/AppFooter.js","component/LinuxApp.js","component/MiniDrawer.js","App.js","serviceWorker.js","index.js"],"names":["AppFooter","classes","this","props","react_default","a","createElement","className","classNames","footer","React","Component","withStyles","theme","position","left","bottom","width","backgroundColor","color","textAlign","LinuxApp","item","url","icon","toString","startsWith","type","_this$props","data","Card_default","card","CardActionArea_default","link","href","src","target","rel","Typography_default","center","title","gutterBottom","name","CardContent_default","getDesktopImage","alt","appItem","display","marginLeft","marginRight","height","margin","textDecoration","categories","id","MiniDrawer","state","open","search","appType","handleDrawerOpen","_this","setState","handleDrawerClose","onCategoryClick","dataSource","fetch","then","response","json","responseJson","console","log","onSearch","e","value","_classNames3","_classNames4","_this2","filteredApps","filter","toLowerCase","indexOf","root","CssBaseline_default","AppBar_default","appBar","Object","defineProperty","appBarShift","Toolbar_default","disableGutters","IconButton_default","aria-label","onClick","menuButton","hide","Menu_default","variant","noWrap","searchIcon","Search_default","InputBase_default","placeholder","inputRoot","input","inputInput","onChange","autoFocus","Drawer_default","drawer","drawerOpen","drawerClose","paper","toolbar","direction","ChevronRight_default","ChevronLeft_default","Divider_default","List_default","map","ListItem_default","button","key","style","ListItemText_default","primary","content","maxHeight","overflow","component_LinuxApp","zIndex","transition","transitions","create","easing","sharp","duration","leavingScreen","concat","enteringScreen","borderRadius","shape","fade","palette","common","white","&:hover","spacing","unit","breakpoints","up","pointerEvents","alignItems","justifyContent","flexShrink","whiteSpace","drawerIcon","overflowX","objectSpread","padding","mixins","flexGrow","paddingTop","paddingRight","paddingBottom","paddingLeft","withTheme","App","Fragment","index_es","component_MiniDrawer","component_AppFooter","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d9c9f37d.chunk.js","sourcesContent":["import React from 'react'\r\nimport { withStyles } from '@material-ui/core';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst styles = theme => ({\r\n    footer: {\r\n        position: \"fixed\",\r\n        left: 0,\r\n        bottom: 0,\r\n        width: \"100%\",\r\n        backgroundColor: \"white\",\r\n        color: \"black\",\r\n        textAlign: \"center\"\r\n    }\r\n})\r\n\r\nclass AppFooter extends React.Component {    \r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <footer className={classNames(classes.footer)}><small>&copy; Copyright 2019, StellaSoft</small></footer>\r\n        )\r\n    }\r\n}\r\n\r\nAppFooter.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n  };\r\n\r\nexport default withStyles(styles)(AppFooter)","import React, { Component } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types'\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst gridCellWidth = 128\r\n\r\nconst styles = theme => ({\r\n    title: {\r\n        textAlign: 'center'\r\n    },\r\n    appItem: {\r\n        width: gridCellWidth,\r\n        display: 'inline-block'\r\n    },\r\n    center: {\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        display: 'block',\r\n        textAlign: 'center'\r\n    },\r\n    icon: {\r\n        width: 64\r\n    },\r\n    card: {\r\n        width: gridCellWidth,\r\n        height: gridCellWidth,\r\n        display: 'inline-block',\r\n        margin: '1px'\r\n    },\r\n    link: {\r\n        textDecoration: 'none'\r\n    }\r\n})\r\n\r\nclass LinuxApp extends Component {\r\n\r\n    getDesktopImage(item) {\r\n        let url = item.icon.toString();\r\n\r\n        if (!url.startsWith(\"https\")) {\r\n            if (item.type === 3) {\r\n                return \"./images/ubuntu_icon.png\"\r\n            }\r\n        }\r\n\r\n        return url;\r\n    }\r\n\r\n    render() {\r\n        const { data, classes } = this.props\r\n        return (\r\n            <Card className={classNames(classes.card)}>\r\n                <CardActionArea>\r\n                    <a className={classNames(classes.link)} href={data.src} target=\"_blank\" rel={\"noopener noreferrer\"}>\r\n                        <Typography className={classNames(classes.center, classes.title)} color=\"textSecondary\" gutterBottom>\r\n                            {data.name}\r\n                        </Typography>\r\n\r\n                        <CardContent>\r\n                            <img className={classNames(classes.icon, classes.center)} src={this.getDesktopImage(data)} alt={data.name} />\r\n                        </CardContent>\r\n                    </a>\r\n                </CardActionArea>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nLinuxApp.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n  };\r\n\r\nexport default withStyles(styles)(LinuxApp);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport LinuxApp from './LinuxApp.js'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade } from '@material-ui/core/styles/colorManipulator';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst flatpakApi = 'https://localhost:44369/api/apps?type=2'\r\nconst snapApi = 'https://localhost:44369/api/apps?type=3'\r\n\r\nconst categories = [\r\n  { id: 1, src: './images/appimage.png', name: 'AppImage', data: [] },\r\n  { id: 2, src: './images/flatpak.png', name: 'Flatpak', data: flatpakApi },\r\n  { id: 3, src: './images/snap.png', name: 'Snap', data: snapApi }\r\n]\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing.unit * 2,\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing.unit * 3,\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing.unit * 9,\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  menuButton: {\r\n    marginLeft: 12,\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerIcon: {\r\n    width: 24\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing.unit * 7 + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing.unit * 9 + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing.unit * 3\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n    width: '100%',\r\n  },\r\n  inputInput: {\r\n    paddingTop: theme.spacing.unit,\r\n    paddingRight: theme.spacing.unit,\r\n    paddingBottom: theme.spacing.unit,\r\n    paddingLeft: theme.spacing.unit * 10,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: 200,\r\n    },\r\n  }\r\n});\r\n\r\nclass MiniDrawer extends React.Component {\r\n  state = {\r\n    open: false,\r\n    data: [],\r\n    search: '',\r\n    appType: 2\r\n  };\r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  onCategoryClick = (type) => {\r\n    let dataSource = categories[type - 1].data;\r\n\r\n    fetch(dataSource)\r\n    .then((response) => response.json())\r\n    .then((responseJson) => {\r\n      console.log(responseJson);\r\n      this.setState({ data: responseJson })\r\n    })\r\n\r\n    //this.setState({ data: categories[type - 1].data })\r\n  };\r\n\r\n  onSearch = e =>  {\r\n    this.setState({ search: e.target.value })\r\n  }\r\n\r\n  render() {\r\n    const { classes, theme } = this.props;\r\n    const { search } = this.state;\r\n    const filteredApps = this.state.data.filter(item => {\r\n      return item.name.toLowerCase().indexOf(search.toLowerCase()) !== -1;\r\n    });\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar\r\n          position=\"fixed\"\r\n          className={classNames(classes.appBar, {\r\n            [classes.appBarShift]: this.state.open,\r\n          })}\r\n        >\r\n          <Toolbar disableGutters={!this.state.open}>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"Open drawer\"\r\n              onClick={this.handleDrawerOpen}\r\n              className={classNames(classes.menuButton, {\r\n                [classes.hide]: this.state.open,\r\n              })}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n              App Store\r\n            </Typography>\r\n\r\n            <div className={classes.search}>\r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n              <InputBase\r\n                placeholder=\"Search…\"\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput,\r\n                }}\r\n                onChange={this.onSearch}\r\n                autoFocus={true}\r\n              />\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          className={classNames(classes.drawer, {\r\n            [classes.drawerOpen]: this.state.open,\r\n            [classes.drawerClose]: !this.state.open,\r\n          })}\r\n          classes={{\r\n            paper: classNames({\r\n              [classes.drawerOpen]: this.state.open,\r\n              [classes.drawerClose]: !this.state.open,\r\n            }),\r\n          }}\r\n          open={this.state.open}\r\n        >\r\n          <div className={classes.toolbar}>\r\n            <IconButton onClick={this.handleDrawerClose}>\r\n              {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List>\r\n            {categories.map((item) =>\r\n              <ListItem button key={item.name} onClick={() => this.onCategoryClick(item.id)}>\r\n                <img className=\"icon\" src={item.src} alt={item.name} style={{ width: 24, marginRight: 15 }} />\r\n                <ListItemText primary={item.name}></ListItemText>\r\n              </ListItem>\r\n            )}\r\n          </List>\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n          <div style={{maxHeight: '100%', overflow: 'hidden'}}>\r\n          {filteredApps.map((item) => {\r\n                return <LinuxApp data={item} />\r\n              })}\r\n          </div>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMiniDrawer.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(MiniDrawer);","import React, { Component } from 'react'\r\nimport AppFooter from './component/AppFooter';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport MiniDrawer from './component/MiniDrawer';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <MiniDrawer />\r\n        <AppFooter />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}