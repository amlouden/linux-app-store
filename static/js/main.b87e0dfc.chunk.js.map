{"version":3,"sources":["component/AppFooter.js","component/LinuxApp.js","component/AppHorizontalList.js","component/MiniDrawer.js","App.js","serviceWorker.js","index.js"],"names":["AppFooter","classes","this","props","react_default","a","createElement","className","classNames","footer","React","Component","withStyles","theme","position","left","bottom","width","backgroundColor","color","textAlign","LinuxApp","item","url","icon","toString","startsWith","type","data","concat","src","_this$props","Card_default","card","CardActionArea_default","link","href","getSrc","target","rel","Typography_default","center","title","gutterBottom","name","CardContent_default","getDesktopImage","alt","appItem","display","marginLeft","marginRight","height","margin","textDecoration","AppHorizontalList","items","style","listWrapper","map","component_LinuxApp","overflow","whiteSpace","palette","background","paper","baseUrl","categories","id","MiniDrawer","state","open","apps","filteredApps","recentlyAdded","recentlyUpdated","search","appType","contentWidth","contentHeight","handleDrawerOpen","_this","setState","handleDrawerClose","onCategoryClick","populateData","onSearch","e","filter","toLowerCase","indexOf","value","_this2","fetch","then","response","json","responseJson","contentElement","clientWidth","clientHeight","recentlyAddedHeight","recentlyAddedElement","console","log","length","_classNames3","_classNames4","_this3","root","CssBaseline_default","AppBar_default","appBar","Object","defineProperty","appBarShift","ref","appBarElement","Toolbar_default","disableGutters","IconButton_default","aria-label","onClick","menuButton","hide","Menu_default","variant","noWrap","searchIcon","Search_default","InputBase_default","placeholder","inputRoot","input","inputInput","onChange","autoFocus","Drawer_default","drawer","drawerOpen","drawerClose","toolbar","direction","ChevronRight_default","ChevronLeft_default","Divider_default","List_default","ListItem_default","button","key","ListItemText_default","primary","content","index_es","container","spacing","xs","paddingBottom","marginTop","marginBottom","component_AppHorizontalList","es","cellCount","cellRenderer","bind","cellSizeAndPositionGetter","index","_ref","_ref2","cols","Math","floor","x","y","zIndex","transition","transitions","create","easing","sharp","duration","leavingScreen","enteringScreen","borderRadius","shape","fade","common","white","&:hover","unit","breakpoints","up","pointerEvents","alignItems","justifyContent","flexShrink","drawerIcon","overflowX","objectSpread","padding","mixins","flexGrow","paddingLeft","paddingTop","paddingRight","gridList","flexWrap","transform","withTheme","App","Fragment","component_MiniDrawer","component_AppFooter","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b87e0dfc.chunk.js","sourcesContent":["import React from 'react'\r\nimport { withStyles } from '@material-ui/core';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst styles = theme => ({\r\n    footer: {\r\n        position: \"fixed\",\r\n        left: 0,\r\n        bottom: 0,\r\n        width: \"100%\",\r\n        backgroundColor: \"white\",\r\n        color: \"black\",\r\n        textAlign: \"center\"\r\n    }\r\n})\r\n\r\nclass AppFooter extends React.Component {    \r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <footer className={classNames(classes.footer)}><small>&copy; Copyright 2019, StellaSoft</small></footer>\r\n        )\r\n    }\r\n}\r\n\r\nAppFooter.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n  };\r\n\r\nexport default withStyles(styles)(AppFooter)","import React, { Component } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types'\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst gridCellWidth = 128\r\n\r\nconst styles = theme => ({\r\n    title: {\r\n        textAlign: 'center'\r\n    },\r\n    appItem: {\r\n        width: gridCellWidth,\r\n        display: 'inline-block'\r\n    },\r\n    center: {\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        display: 'block',\r\n        textAlign: 'center'\r\n    },\r\n    icon: {\r\n        width: 64\r\n    },\r\n    card: {\r\n        width: gridCellWidth,\r\n        height: gridCellWidth,\r\n        display: 'inline-block',\r\n        margin: '1px'\r\n    },\r\n    link: {\r\n        textDecoration: 'none'\r\n    }\r\n})\r\n\r\nclass LinuxApp extends Component {\r\n\r\n    getDesktopImage(item) {\r\n        let url = item.icon.toString();\r\n\r\n        if (!url.startsWith(\"https\")) {\r\n            if (item.type === 3) {\r\n                return \"./images/ubuntu_icon.png\"\r\n            }\r\n        }\r\n\r\n        return url;\r\n    }\r\n\r\n    getSrc() {\r\n        const { data } = this.props\r\n\r\n        if (data.type === 2) {\r\n            return `http://${data.src}`\r\n        } else {\r\n            return data.src\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { data, classes } = this.props\r\n        return (\r\n            <Card className={classNames(classes.card)}>\r\n                <CardActionArea>\r\n                    <a className={classNames(classes.link)} href={this.getSrc()} target=\"_blank\" rel={\"noopener noreferrer\"}>\r\n                        <Typography className={classNames(classes.center, classes.title)} color=\"textSecondary\" gutterBottom>\r\n                            {data.name}\r\n                        </Typography>\r\n\r\n                        <CardContent>\r\n                            <img className={classNames(classes.icon, classes.center)} src={this.getDesktopImage(data)} alt={data.name} />\r\n                        </CardContent>\r\n                    </a>\r\n                </CardActionArea>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nLinuxApp.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n  };\r\n\r\nexport default withStyles(styles)(LinuxApp);","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport LinuxApp from './LinuxApp.js';\r\n\r\nconst styles = theme => ({\r\n    listWrapper: {\r\n      overflow: 'auto',\r\n      whiteSpace: 'nowrap',\r\n      backgroundColor: theme.palette.background.paper,\r\n    }\r\n  });\r\n\r\n  class AppHorizontalList extends React.Component {\r\n      render() {\r\n        const { classes, items, width } = this.props;\r\n        return (\r\n            <div style={{width: width}}>\r\n            <div className={classes.listWrapper}>\r\n                {items.map(item => (\r\n                    <LinuxApp data={item} />\r\n                ))}\r\n            </div>\r\n            </div>\r\n          );\r\n      }\r\n  }\r\n\r\n  AppHorizontalList.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n  };\r\n\r\n  export default withStyles(styles)(AppHorizontalList);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade } from '@material-ui/core/styles/colorManipulator';\r\nimport AppHorizontalList from './AppHorizontalList.js';\r\nimport LinuxApp from './LinuxApp.js';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Collection } from 'react-virtualized';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst baseUrl = 'http://linuxappstore.xyz'\r\n\r\nconst categories = [\r\n  { id: 1, src: './images/appimage.png', name: 'AppImage' },\r\n  { id: 2, src: './images/flatpak.png', name: 'Flatpak' },\r\n  { id: 3, src: './images/snap.png', name: 'Snap' }\r\n]\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing.unit * 2,\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing.unit * 3,\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing.unit * 9,\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  menuButton: {\r\n    marginLeft: 12,\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerIcon: {\r\n    width: 24\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing.unit * 7 + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing.unit * 9 + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    paddingLeft: 5,\r\n    paddingTop: 69\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n    width: '100%',\r\n  },\r\n  inputInput: {\r\n    paddingTop: theme.spacing.unit,\r\n    paddingRight: theme.spacing.unit,\r\n    paddingBottom: theme.spacing.unit,\r\n    paddingLeft: theme.spacing.unit * 10,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: 200,\r\n    },\r\n  },\r\n  gridList: {\r\n    flexWrap: 'nowrap',\r\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n    transform: 'translateZ(0)',\r\n  }\r\n});\r\n\r\nclass MiniDrawer extends React.Component {\r\n  state = {\r\n    open: false,\r\n    apps: [],\r\n    filteredApps: [],\r\n    recentlyAdded: [],\r\n    recentlyUpdated: [],\r\n    search: '',\r\n    appType: 2,\r\n    contentWidth: 0,\r\n    contentHeight: 0\r\n  };\r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  onCategoryClick = (type) => {\r\n    this.setState({ appType: type })\r\n    this.populateData(type)\r\n  };\r\n\r\n  populateData(type) {\r\n    let recentlyAdded = `${baseUrl}/api/recentlyAdded?type=${type}&limit=25`\r\n    let recentlyUpdated = `${baseUrl}/api/recentlyUpdated?type=${type}&limit=25`\r\n    let apps = `${baseUrl}/api/apps?type=${type}`\r\n\r\n    fetch(recentlyAdded)\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n        this.setState({ recentlyAdded: responseJson })\r\n      })\r\n\r\n    fetch(recentlyUpdated)\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n        this.setState({ recentlyUpdated: responseJson })\r\n      })\r\n\r\n    fetch(apps)\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n        this.setState({ apps: responseJson, filteredApps: [], search: '' })\r\n      })\r\n  }\r\n\r\n  onSearch = e => {\r\n    const filteredApps = this.state.apps.filter(item => {\r\n      return item.name.toLowerCase().indexOf(e.target.value.toLowerCase()) !== -1;\r\n    });\r\n\r\n    this.setState({ search: e.target.value, filteredApps: filteredApps })\r\n  }\r\n\r\n  componentDidMount() {\r\n    const contentWidth = this.contentElement.clientWidth;\r\n    const contentHeight = this.contentElement.clientHeight;\r\n    this.setState({ contentWidth: contentWidth, contentHeight: contentHeight });\r\n\r\n    const recentlyAddedHeight = this.recentlyAddedElement.clientHeight;\r\n\r\n    console.log(`content width: ${contentWidth} height: ${contentHeight} recentlyAddedHeight: ${recentlyAddedHeight}`);\r\n\r\n    if (this.state.apps.length === 0) {\r\n      this.populateData(this.state.appType)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes, theme } = this.props;\r\n    const filteredApps = this.state.filteredApps.length === 0 ? this.state.apps : this.state.filteredApps\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar\r\n          position=\"fixed\"\r\n          className={classNames(classes.appBar, {\r\n            [classes.appBarShift]: this.state.open,\r\n          })}\r\n          ref={(appBarElement) => this.appBarElement = appBarElement}\r\n        >\r\n          <Toolbar disableGutters={!this.state.open}>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"Open drawer\"\r\n              onClick={this.handleDrawerOpen}\r\n              className={classNames(classes.menuButton, {\r\n                [classes.hide]: this.state.open,\r\n              })}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n              App Store\r\n            </Typography>\r\n\r\n            <div className={classes.search}>\r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n              <InputBase\r\n                placeholder=\"Search…\"\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput,\r\n                }}\r\n                onChange={this.onSearch}\r\n                autoFocus={true}\r\n              />\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          className={classNames(classes.drawer, {\r\n            [classes.drawerOpen]: this.state.open,\r\n            [classes.drawerClose]: !this.state.open,\r\n          })}\r\n          classes={{\r\n            paper: classNames({\r\n              [classes.drawerOpen]: this.state.open,\r\n              [classes.drawerClose]: !this.state.open,\r\n            }),\r\n          }}\r\n          open={this.state.open}\r\n        >\r\n          <div className={classes.toolbar}>\r\n            <IconButton onClick={this.handleDrawerClose}>\r\n              {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List>\r\n            {categories.map((item) =>\r\n              <ListItem button key={item.name} onClick={() => this.onCategoryClick(item.id)}>\r\n                <img className=\"icon\" src={item.src} alt={item.name} style={{ width: 24, marginRight: 15 }} />\r\n                <ListItemText primary={item.name}></ListItemText>\r\n              </ListItem>\r\n            )}\r\n          </List>\r\n        </Drawer>\r\n        <main className={classes.content} style={{height: '100%'}} ref={(contentElement) => this.contentElement = contentElement}>\r\n          <Grid container spacing={24}>\r\n            <Grid item xs={12} style={{paddingBottom: 5}} ref={(recentlyAddedElement) => this.recentlyAddedElement = recentlyAddedElement}>\r\n              <h3 style={{marginTop: 0, marginBottom: 5}}>Recently Added</h3>\r\n              <AppHorizontalList items={this.state.recentlyAdded} width={this.state.contentWidth - 25} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} style={{paddingBottom: 5}}>\r\n              <h3 style={{marginTop: 0, marginBottom: 5}}>Recently Updated</h3>\r\n              <AppHorizontalList items={this.state.recentlyUpdated} width={this.state.contentWidth - 25} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} style={{paddingBottom: 5, marginRight: 5}}>\r\n            <h3 style={{marginTop: 0, marginBottom: 5}}>{categories[this.state.appType - 1].name}'s</h3>\r\n\r\n            <Collection \r\n                  cellCount={filteredApps.length}\r\n                  cellRenderer={this.cellRenderer.bind(this)}\r\n                  cellSizeAndPositionGetter={this.cellSizeAndPositionGetter.bind(this)}\r\n                  height={this.state.contentHeight - 416 - 69 - 21 + 5}\r\n                  width={this.state.contentWidth - 25}              \r\n              />\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  cellRenderer ({ index, key, style }) {\r\n    let apps = this.state.filteredApps.length === 0 ? this.state.apps : this.state.filteredApps\r\n    return (\r\n      <div\r\n        key={key}\r\n        style={style}        \r\n      >\r\n\r\n      <LinuxApp data={apps[index]} style={{margin: 1}} />\r\n\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  cellSizeAndPositionGetter ({ index }) {\r\n    let cellWidth = 129\r\n    let cellHeight = 129\r\n\r\n    let contentWidth = this.state.contentWidth\r\n    let cols = Math.floor(contentWidth / cellWidth)\r\n\r\n    let xMod = index % cols\r\n    let xPos = xMod * cellWidth\r\n\r\n    let row = Math.floor(index / cols)\r\n    let yPos = row * cellHeight\r\n  \r\n    return {\r\n      height: cellHeight,\r\n      width: cellWidth,\r\n      x: xPos,\r\n      y: yPos\r\n    }\r\n  }\r\n\r\n}\r\n\r\nMiniDrawer.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(MiniDrawer);","import React, { Component } from 'react'\r\nimport AppFooter from './component/AppFooter';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport MiniDrawer from './component/MiniDrawer';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <MiniDrawer />\r\n        <AppFooter />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}